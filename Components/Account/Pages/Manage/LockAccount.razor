@page "/Bank/LockAccount/"
@inject DbContextService DbContextService
@inject NavigationManager NavigationManager
@layout BankLayout

<PageTitle>Lock and Unlock Account</PageTitle>

<h3>Lock/Unlock Account</h3>


<h3>@(account?.IsActive == true ? "Lock Account" : "Unlock Account")</h3>

@if (account == null)
{
    <p>Loading...</p>
}
else
{
    <p>
        Account: <strong>@account.AccountNumber</strong> - @account.AccountName<br />
        Current Status: <strong>@(account.IsActive ? "Active" : "Locked")</strong>
    </p>
    <button class="btn btn-primary" @onclick="ToggleLock">
        @((account.IsActive ? "Lock" : "Unlock")) Account
    </button>
    @* Button for cancel *@
    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
}

@code {
    [Parameter] public int AccountId { get; set; }
    private Account? account;

    protected override async Task OnInitializedAsync()
    {
        account = await DbContextService.GetAccountByIdAsync(AccountId);
    }

    private async Task ToggleLock()
    {
        if (account != null)
        {
            // Toggle the account's active status
            account.IsActive = !account.IsActive;
            await DbContextService.UpdateAccountAsync(account);
            NavigationManager.NavigateTo("/Bank/Accounts");
        }
    }

    private void Cancel() => NavigationManager.NavigateTo("/Bank/Accounts");
}
