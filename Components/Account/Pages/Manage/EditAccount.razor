@page "/Bank/EditAccount"
@inject DbContextService DbContextService
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@layout BankLayout


<PageTitle>Edit Bank Account</PageTitle>

<div class="container">
<h3>Edit Account</h3>

@if (account == null)
{
    <p>Loading...</p>
}
else
{
    <EditForm Model="account" OnValidSubmit="OnValidSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        @* Change Account Name *@
        <div class="mb-3">
            <label>Account Name</label>
            <InputText @bind-Value="account.AccountName" class="form-control" />
        </div>
        @* Button for save *@
        <button type="submit" class="btn btn-primary">Save Changes</button>
    </EditForm>
}
</div>



@code{

    [Parameter]
    public int AccountId { get; set; }
    private Account? account;

    protected override async Task OnInitializedAsync()
    {   // Looking for a specific Id (queries in Accounts DbSet)
        account = await DbContextService.GetAccountByIdAsync(AccountId);
    }

    private async Task OnValidSubmit()
    {
        // Updating the database => account
        await DbContextService.UpdateAccountAsync(account);
        NavigationManager.NavigateTo("/Bank");
    }
}