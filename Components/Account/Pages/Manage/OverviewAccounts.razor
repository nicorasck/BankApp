@page "/Bank/Accounts"
@using BankApp.Models
@using BankApp.Data
@inject DbContextService DbContextService
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<ApplicationUser> UserManager
@inject NavigationManager NavigationManager
@layout BankLayout
@rendermode InteractiveServer


<PageTitle>Accounts Overview</PageTitle>

<div class="container">
    <div class="alert alert-info">
        Hello, Here are your accounts.
    </div>
    <div class="table-responsive">
        <table class="table table-hover">
            <thead class="thead-light">
                <tr>
                    <th>Account Number</th>
                    <th>Account Name</th>
                    <th>Balance</th>
                    <th>Account Type</th>
                    <th>Actions</th>
                    <th>Transaction History</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var a in accounts)
                {
                    <tr>
                        <td>@a.AccountNumber</td>
                        <td>@a.AccountName</td>
                        <td>@a.Balance.ToString("C")</td>
                        <td>@a.AccountType</td>
                        <td>
                            <button class="btn btn-sm btn-danger" @onclick="() => DeleteAccount(a)">Delete</button>
                        </td>
                        <td>
                            <button class="btn btn-sm btn-info" @onclick="() => ToggleHistory(a)">History</button>
                        </td>
                    </tr>
                    @if (a.DisplayTransactions)
                    {
                        <tr>
                            <td colspan="6">
                                <table class="table table-sm">
                                    <thead>
                                        <tr>
                                            <th>Date</th>
                                            <th>From</th>
                                            <th>To</th>
                                            <th>Amount</th>
                                            <th>Message</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var t in a.BankTransactions)
                                        {
                                            <tr>
                                                <td>@t.TransactionDate.ToString()</td>
                                                <td>@t.FromAccount</td>
                                                <td>@t.ToAccount</td>
                                                <td>@t.OutgoingBalance.ToString("C")</td>
                                                <td>@t.Message</td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                                Note To myself: Make sure this line will be in the 'bottom', like a border => hr/
                                <hr/> 
                            </td>
                        </tr>
                    }
                }
            </tbody>
        </table>
    </div>
</div>

@code {
    private List<Account>? accounts;
    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = await UserManager.GetUserAsync(authState.User);
        if (user != null)
        {
            // Bringing accounts for the authenticated user
            accounts = await DbContextService.GetAccountsForUserAsync(user.Id);
            // Bringing all transactions for each account
            foreach (var a in accounts)
            {
                a.BankTransactions = await DbContextService.GetTransactionsForAccountAsync(a.Id, a.AccountNumber);
            }
        }
    }

    // To show history (toggle button)
    private async Task ToggleHistory(Account account)
    {
        // Error handling
        if (account != null && account.BankTransactions != null && account.BankTransactions.Any())
        {
            account.BankTransactions = await DbContextService.GetTransactionsForAccountAsync(account.Id, account.AccountNumber);
        }
        account.DisplayTransactions = !account.DisplayTransactions;
        StateHasChanged();
    }

    // Deletes account and updates
    private async Task DeleteAccount(Account _account)
    {
        try
        {
            if (_account != null)
            {
                // Calling service to delete the account from the database
                await DbContextService.DeleteAccountAsync(_account.UserId, _account.Id);
                accounts?.Remove(_account);
                // Trigger a UI refresh
                StateHasChanged();
                // to get back to BankIndex.razor ("/Bank")
                NavigationManager.NavigateTo("/Bank");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Something went wrong: {ex.Message}");
        }
    }
}
