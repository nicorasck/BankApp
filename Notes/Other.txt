@page "/admin"
@attribute [Authorize(Roles = "Admin")]
@inject UserManager<ApplicationUser> UserManager

<h3>Admin Page</h3>

<ul>
    @foreach (var user in users)
    {
        <li>@user.UserName - @user.Email</li>
    }
</ul>

@code {
    private List<ApplicationUser> users = new List<ApplicationUser>();

    protected override async Task OnInitializedAsync()
    {
        users = UserManager.Users.ToList();
    }
}



@page "/role-management"
@attribute [Authorize(Roles = "Admin")]
@inject UserManager<ApplicationUser> UserManager
@inject RoleManager<IdentityRole> RoleManager

<h3>Role Management</h3>

<input type="text" @bind="userId" placeholder="User ID" />
<input type="text" @bind="roleName" placeholder="Role Name" />
<button @onclick="AddRole">Add Role</button>
<button @onclick="RemoveRole">Remove Role</button>

@code {
    private string userId;
    private string roleName;

    private async Task AddRole()
    {
        var user = await UserManager.FindByIdAsync(userId);
        if (user != null)
        {
            await UserManager.AddToRoleAsync(user, roleName);
        }
    }

    private async Task RemoveRole()
    {
        var user = await UserManager.FindByIdAsync(userId);
        if (user != null)
        {
            await UserManager.RemoveFromRoleAsync(user, roleName);
        }
    }
}